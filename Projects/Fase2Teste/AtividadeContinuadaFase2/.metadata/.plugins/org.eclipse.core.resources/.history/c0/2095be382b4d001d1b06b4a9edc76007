package br.com.cesarschool.poo.mediators;

import br.com.cesarschool.poo.entidades.Produto;
import br.com.cesarschool.poo.repositorios.RepositorioProduto;

/**
 * @author Anônimo
 *
 * Implementação primária para efeito didático.
 * Será melhorada!!!
 */
public class ProdutoMediator {
	
	private RepositorioProduto repositorioProduto = RepositorioProduto.getInstancia();

	private static final String MENSAGEM_PRODUTO_NAO_INFORMADO = "Produto não informado!";
	private static final String MENSAGEM_CODIGO_INVALIDO = "Código inválido!";
	private static final String MENSAGEM_PRECO_INVALIDO = "Preço inválido!";
	private static final String MENSAGEM_NOME_NAO_INFORMADO = "Nome não informado!";	
	private static final String MENSAGEM_NOME_MUITO_CURTO = "Nome muito curto!";
	private static final String MENSAGEM_TIPO_NAO_PREENCHIDO = "Tipo não preenchido!";
	private static final String MENSAGEM_PRODUTO_JA_CADASTRADO = "Produto já cadastrado!";
	private static final String MENSAGEM_PRODUTO_NAO_ENCONTRADO = "Produto não encontrado!";
	private static final int TAMANHO_MINIMO_NOME = 3;
	
	public StatusValidacaoProduto incluir(Produto produto) {
		StatusValidacaoProduto status = validar(produto);
		if (status.isValido()) {
			boolean retornoRepositorio = repositorioProduto.incluir(produto);
			if (!retornoRepositorio) {
				status.getCodigosErros()[0] = StatusValidacaoProduto.PRODUTO_JA_CADASTRADO;
				status.getMensagens()[0] = MENSAGEM_PRODUTO_JA_CADASTRADO;
				status.setValido(false);
			}
		}				
		return status;
	}
	public StatusValidacaoProduto alterar(Produto produto) {
		StatusValidacaoProduto status = validar(produto);
		if (status.isValido()) {
			boolean retornoRepositorio = repositorioProduto.alterar(produto);
			if (!retornoRepositorio) {
				status.getCodigosErros()[0] = StatusValidacaoProduto.PRODUTO_NAO_ENCONTRADO;
				status.getMensagens()[0] = MENSAGEM_PRODUTO_NAO_ENCONTRADO;
				status.setValido(false);
			}
		}				
		return status;
	}	
	public boolean excluir(long codigo) {
		return repositorioProduto.excluir(codigo);
	}	
	public Produto buscar(long codigo) {
		return repositorioProduto.buscar(codigo);
	}
	
	private StatusValidacaoProduto validar(Produto produto) {
		int[] codigoStatus = new int[StatusValidacaoProduto.QTD_SITUACOES_EXCECAO]; 
		String[] mensagensStatus = new String[StatusValidacaoProduto.QTD_SITUACOES_EXCECAO];
		int contErros = 0;
		if (produto == null) {
			codigoStatus[contErros++] = StatusValidacaoProduto.PRODUTO_NAO_INFORMADO;
			mensagensStatus[contErros] = MENSAGEM_PRODUTO_NAO_INFORMADO;			
		} else {
			if (!codigoValido(produto)) {
				codigoStatus[contErros++] = StatusValidacaoProduto.CODIGO_INVALIDO;
				mensagensStatus[contErros] = MENSAGEM_CODIGO_INVALIDO;
			} 
			if (!precoValido(produto)) {
				codigoStatus[contErros++] = StatusValidacaoProduto.PRECO_INVALIDO;
				mensagensStatus[contErros] = MENSAGEM_PRECO_INVALIDO;				
			}
			String nome = produto.getNome();
			if (nome == null || nome.trim().equals("")) {
				codigoStatus[contErros++] = StatusValidacaoProduto.NOME_NAO_INFORMADO;
				mensagensStatus[contErros] = MENSAGEM_NOME_NAO_INFORMADO;				
			}			
			if (nome.trim().length() < TAMANHO_MINIMO_NOME) {
				codigoStatus[contErros++] = StatusValidacaoProduto.NOME_MUITO_CURTO;
				mensagensStatus[contErros] = MENSAGEM_NOME_MUITO_CURTO;								
			}
			if (produto.getTipo() == null) {
				codigoStatus[contErros++] = StatusValidacaoProduto.TIPO_NAO_PREENCHIDO;
				mensagensStatus[contErros] = MENSAGEM_TIPO_NAO_PREENCHIDO;												
			}
		}		
		return new StatusValidacaoProduto(codigoStatus, mensagensStatus, contErros == 0);		
	}	
	private boolean codigoValido(Produto produto) {
		if (produto.getCodigo() <= 0) {
			return false;
		}
		return true;
	}	
	private boolean precoValido(Produto produto) {
		return produto.getPreco() > 0;
	}
}
